/**
 * Author:  nemanja
 * Created: Aug 1, 2016
 */

CREATE DATABASE  IF NOT EXISTS `rekomendator`;
USE `rekomendator`;


DROP TABLE IF EXISTS `MOVIE_ACTOR`;
DROP TABLE IF EXISTS `MOVIE_GENRE`;
DROP TABLE IF EXISTS `GENRE`;
DROP TABLE IF EXISTS `ACTOR`;
DROP TABLE IF EXISTS `FAVORITE`;
DROP TABLE IF EXISTS `RATE`;
DROP TABLE IF EXISTS `COMMENT`;
DROP TABLE IF EXISTS `MOVIE`;
DROP TABLE IF EXISTS `ROLE_PERMISSION`;
DROP TABLE IF EXISTS `PERMISSION`;
DROP TABLE IF EXISTS `ROLE_PAGE`;
DROP TABLE IF EXISTS `PAGE`;
DROP TABLE IF EXISTS `PERMISSION`;
DROP TABLE IF EXISTS `USER`;
DROP TABLE IF EXISTS `ROLE`;
DROP TABLE IF EXISTS `EVENT`;

CREATE TABLE `ROLE` (
  `TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`TITLE`)
);

CREATE TABLE `USER` (
  `ID` varchar(255) NOT NULL,
  `USERNAME` varchar(255) DEFAULT NULL,
  `PASSWORD` varchar(255) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `SURNAME` varchar(255) DEFAULT NULL,
  `MBR` varchar(255) DEFAULT NULL,
  `EMAIL` varchar(255) DEFAULT NULL,
  `ACTIVE` boolean DEFAULT false,
  `ROLE_TITLE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_USER_ROLE_TITLE` (`ROLE_TITLE`),
  CONSTRAINT `FK_USER_ROLE_TITLE` FOREIGN KEY (`ROLE_TITLE`) REFERENCES `ROLE` (`TITLE`)
);

CREATE TABLE `ACTOR` (
  `ID` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `MOVIE` (
  `ID` varchar(255) NOT NULL,
  `DESCRIPTION` varchar(2048) DEFAULT NULL,
  `DURATION` int(11) DEFAULT NULL,
  `PUBLISHINGDATE` varchar(4) DEFAULT NULL,
  `TITLE` varchar(255) DEFAULT NULL,
  `YOUTUBE` varchar(512) DEFAULT NULL,
  `TRAILER` boolean DEFAULT false,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `FAVORITE` (
  `ID` varchar(255) NOT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `MOVIE_ID` varchar(255) DEFAULT NULL,
  `USER_ID` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_FAVORITE_USER_ID` (`USER_ID`),
  KEY `FK_FAVORITE_MOVIE_ID` (`MOVIE_ID`),
  CONSTRAINT `FK_FAVORITE_MOVIE_ID` FOREIGN KEY (`MOVIE_ID`) REFERENCES `MOVIE` (`ID`),
  CONSTRAINT `FK_FAVORITE_USER_ID` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`ID`)
);

CREATE TABLE `COMMENT` (
  `ID` varchar(255) NOT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `MOVIE_ID` varchar(255) DEFAULT NULL,
  `USER_ID` varchar(255) DEFAULT NULL,
  `TEXT` varchar(2048) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_COMMENT_USER_ID` (`USER_ID`),
  KEY `FK_COMMENT_MOVIE_ID` (`MOVIE_ID`),
  CONSTRAINT `FK_COMMENT_MOVIE_ID` FOREIGN KEY (`MOVIE_ID`) REFERENCES `MOVIE` (`ID`),
  CONSTRAINT `FK_COMMENT_USER_ID` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`ID`)
);

CREATE TABLE `RATE` (
  `ID` varchar(255) NOT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `MOVIE_ID` varchar(255) DEFAULT NULL,
  `USER_ID` varchar(255) DEFAULT NULL,
  `VALUE` int,
  PRIMARY KEY (`ID`),
  KEY `FK_RATE_USER_ID` (`USER_ID`),
  KEY `FK_RATE_MOVIE_ID` (`MOVIE_ID`),
  CONSTRAINT `FK_RATE_MOVIE_ID` FOREIGN KEY (`MOVIE_ID`) REFERENCES `MOVIE` (`ID`),
  CONSTRAINT `FK_RATE_USER_ID` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`ID`)
);

CREATE TABLE `GENRE` (
  `TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`TITLE`)
);

CREATE TABLE `MOVIE_ACTOR` (
  `MOVIE_ID` varchar(255) NOT NULL,
  `ACTORS_ID` varchar(255) NOT NULL,
  PRIMARY KEY (`MOVIE_ID`,`ACTORS_ID`),
  KEY `FK_MOVIE_ACTOR_ACTORS_ID` (`ACTORS_ID`),
  CONSTRAINT `FK_MOVIE_ACTOR_ACTORS_ID` FOREIGN KEY (`ACTORS_ID`) REFERENCES `ACTOR` (`ID`),
  CONSTRAINT `FK_MOVIE_ACTOR_MOVIE_ID` FOREIGN KEY (`MOVIE_ID`) REFERENCES `MOVIE` (`ID`)
);

CREATE TABLE `MOVIE_GENRE` (
  `MOVIE_ID` varchar(255) NOT NULL,
  `GENRE_TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`MOVIE_ID`,`GENRE_TITLE`),
  KEY `FK_MOVIE_GENRE_GENRE_TITLE` (`GENRE_TITLE`),
  CONSTRAINT `FK_MOVIE_GENRE_GENRE_TITLE` FOREIGN KEY (`GENRE_TITLE`) REFERENCES `GENRE` (`TITLE`),
  CONSTRAINT `FK_MOVIE_GENRE_MOVIE_ID` FOREIGN KEY (`MOVIE_ID`) REFERENCES `MOVIE` (`ID`)
);

CREATE TABLE `PERMISSION` (
  `TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`TITLE`)
);

CREATE TABLE `ROLE_PERMISSION` (
  `ROLE_TITLE` varchar(255) NOT NULL,
  `PERMISSIONS_TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`ROLE_TITLE`,`PERMISSIONS_TITLE`),
  KEY `FK_ROLE_PERMISSION_PERMISSIONS_TITLE` (`PERMISSIONS_TITLE`),
  CONSTRAINT `FK_ROLE_PERMISSION_PERMISSIONS_TITLE` FOREIGN KEY (`PERMISSIONS_TITLE`) REFERENCES `PERMISSION` (`TITLE`),
  CONSTRAINT `FK_ROLE_PERMISSION_ROLE_TITLE` FOREIGN KEY (`ROLE_TITLE`) REFERENCES `ROLE` (`TITLE`)
);

CREATE TABLE `PAGE` (
  `TITLE` varchar(255) NOT NULL,
  `PAGE` varchar(255) NOT NULL,
  PRIMARY KEY (`TITLE`)
);

CREATE TABLE `ROLE_PAGE` (
  `ROLE_TITLE` varchar(255) NOT NULL,
  `PAGES_TITLE` varchar(255) NOT NULL,
  PRIMARY KEY (`ROLE_TITLE`,`PAGES_TITLE`),
  KEY `FK_ROLE_PAGE_PAGES_TITLE` (`PAGES_TITLE`),
  CONSTRAINT `FK_ROLE_PAGE_PAGES_TITLE` FOREIGN KEY (`PAGES_TITLE`) REFERENCES `PAGE` (`TITLE`),
  CONSTRAINT `FK_ROLE_PAGE_ROLE_TITLE` FOREIGN KEY (`ROLE_TITLE`) REFERENCES `ROLE` (`TITLE`)
);

CREATE TABLE `EVENT` (
  `ID` varchar(255) NOT NULL,
  `CREATEDDATE` datetime DEFAULT NULL,
  `EVENTDATE` datetime DEFAULT NULL,
  `TITLE` varchar(255) DEFAULT NULL,
  `LOCATION` varchar(255) DEFAULT NULL,
  `APPROVED` boolean DEFAULT false,
  PRIMARY KEY (`ID`)
);

